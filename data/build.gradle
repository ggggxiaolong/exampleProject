apply plugin: 'kotlinx-serialization'
android {
  buildTypes {
    release {
      def baseUrl = "\"https://api.drakeet.com/rebase/"
      buildConfigField 'String', "API", "${baseUrl}\""
      buildConfigField 'okhttp3.logging.HttpLoggingInterceptor.Level', 'OKHTTP_LOG_LEVEL',
          'okhttp3.logging.HttpLoggingInterceptor.Level.BODY'
      minifyEnabled false
    }
    debug {
      def baseUrl = "\"https://api.drakeet.com/rebase/"
      buildConfigField 'String', "API", "${baseUrl}\""
      buildConfigField 'okhttp3.logging.HttpLoggingInterceptor.Level', 'OKHTTP_LOG_LEVEL',
          'okhttp3.logging.HttpLoggingInterceptor.Level.BODY'
      debuggable true
    }
  }

  defaultConfig {
    javaCompileOptions {
      annotationProcessorOptions {
        includeCompileClasspath false
        arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
      }
    }
  }

  lintOptions {
    abortOnError false
  }
}

dependencies {
  kapt deps.immutables.value
  kapt deps.dagger.compiler
  kapt deps.room.compiler
  api deps.room.runtime
  implementation deps.dagger.runtime
  implementation deps.javax_inject
  implementation deps.retrofit.runtime
  implementation deps.retrofit.coroutinesAdapter
  implementation deps.retrofit.koltinSerialization
  implementation deps.okhttp3.logging
  implementation deps.androidx.annotations
  implementation deps.timber
  implementation deps.androidUtils
  implementation deps.kotlin.coroutines.common
  implementation deps.kotlin.coroutines.jdk
  implementation deps.kotlin.coroutines.android
  testImplementation deps.junit
  testImplementation deps.mockito.core
  testImplementation deps.roboletric
  androidTestImplementation deps.androidx.test.runner
  androidTestImplementation deps.espresso.core
}
